scale_colour_manual(values=c('black')) + theme(legend.position="none")
Map + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
# # Make labels
cnames <- aggregate(cbind(counties1807$long, counties1807$lat),list(counties1807$id),
FUN=function(x)mean(range(x)))
colnames(cnames) <- c("group","long","lat")
cnames$long[cnames$group=="Camden"] <- -82 # move up Camden
#produce counties map
Map <- ggplot(counties1807, aes(long, lat, group = group, fill = newcounty)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) +
scale_colour_manual(values=c('black')) + theme(legend.position="none")
Map + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
# Make labels
cnames <- aggregate(cbind(counties1807$long, counties1807$lat),list(counties1807$id),
FUN=function(x)mean(range(x)))
colnames(cnames) <- c("group","long","lat")
cnames$lat[cnames$group=="Camden"] <- 31 # move up Camden
#produce counties map
Map <- ggplot(counties1807, aes(long, lat, group = group, fill = newcounty)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) +
scale_colour_manual(values=c('black')) + theme(legend.position="none")
Map + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
# Make labels
cnames <- aggregate(cbind(counties1807$long, counties1807$lat),list(counties1807$id),
FUN=function(x)mean(range(x)))
colnames(cnames) <- c("group","long","lat")
cnames$lat[cnames$group=="Camden"] <- 31 # move up Camden
cnames$lat[cnames$group=="Bryan"] <- 32 # move up Bryan
cnames$long[cnames$group=="Chatham"] <- -81.2 # move left Chatham
#produce counties map
Map <- ggplot(counties1807, aes(long, lat, group = group, fill = newcounty)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) +
scale_colour_manual(values=c('black')) + theme(legend.position="none")
Map + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
# Make labels
cnames <- aggregate(cbind(counties1807$long, counties1807$lat),list(counties1807$id),
FUN=function(x)mean(range(x)))
colnames(cnames) <- c("group","long","lat")
cnames$lat[cnames$group=="Camden"] <- 31 # move up Camden
cnames$lat[cnames$group=="Bryan"] <- 32.1 # move up Bryan
cnames$long[cnames$group=="Chatham"] <- -81.2 # move left Chatham
#produce counties map
Map <- ggplot(counties1807, aes(long, lat, group = group, fill = newcounty)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) +
scale_colour_manual(values=c('black')) + theme(legend.position="none")
Map + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
# Make labels
cnames <- aggregate(cbind(counties1807$long, counties1807$lat),list(counties1807$id),
FUN=function(x)mean(range(x)))
colnames(cnames) <- c("group","long","lat")
cnames$lat[cnames$group=="Camden"] <- 31 # move up Camden
cnames$lat[cnames$group=="Bryan"] <- 32.01 # move up Bryan
cnames$long[cnames$group=="Chatham"] <- -81.2 # move left Chatham
#produce counties map
Map <- ggplot(counties1807, aes(long, lat, group = group, fill = newcounty)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) +
scale_colour_manual(values=c('black')) + theme(legend.position="none")
Map + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = avgacre)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = county.f) + scale_colour_manual(values=c('black'),guide=FALSE)
Map.avgacre
county.50
colnanes(county.50)
colnames(county.50)
county.50$cotout50
#Avg. Acre value map
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = avgacre)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = county.f) + scale_colour_manual(values=c('black'),guide=FALSE)
Map.avgacre
# Slave pop. map
Map.slave.pop <- ggplot(county.00, aes(long, lat, group = group, fill = slave.poppc)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Slave pop. (%)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) + scale_colour_manual(values=c('black'),guide=FALSE)
Map.slave.pop
#Avg. Acre value map
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = avgacre)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = county.f) + scale_colour_manual(values=c('black'),guide=FALSE)
Map.avgacre
colnames(counties)
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = farmval)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = county.f) + scale_colour_manual(values=c('black'),guide=FALSE)
Map.avgacre
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = avgacre)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = county.50) + scale_colour_manual(values=c('black'),guide=FALSE)
Map.avgacre
county.50$avgacre
county.50$farmval
View(county.50)
View(counties)
#merge 1850 census data
county.50 <- merge(county.f,counties, by="id", by.y = "county")
#Avg. Acre value map
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = avgacre)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = county.f) + scale_colour_manual(values=c('black'),guide=FALSE)
Map.avgacre
county.50 <- merge(counties1807,counties, by="id", by.y = "county",all.x=TRUE)
#Avg. Acre value map
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = avgacre)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = county.f) + scale_colour_manual(values=c('black'),guide=FALSE)
Map.avgacre
county.50
counties1807
#merge 1850 census data
county.50 <- merge(counties1807,counties, by="id", by.y = "county")
#Avg. Acre value map
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = avgacre)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = county.f) + scale_colour_manual(values=c('black'),guide=FALSE)
Map.avgacre
county.50 <- merge(counties1807,counties, by="id", by.y = "county")
county.50
colnames(counties1807)
colnames(counties)
head(counties1807)
head(counties)
#merge 1850 census data
county.50 <- merge(counties1807,counties, by.x="id", by.y = "name") # only counties in 1800
#Avg. Acre value map
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = avgacre)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = county.f) + scale_colour_manual(values=c('black'),guide=FALSE)
Map.avgacre
library(foreign)
colnames(resp.dat)
colnames(lot05)
counties
?PermutationTest
load("~/Dropbox/ga-lottery/data/analysis.RData")
nrow(lot05)
colnames(resp.dat)
colnames(lot05)
PermutationTest(y=lot05$junior,
treat=lot05treat,
w=resp.dat$weight,
p.score=resp.dat$p.score)
PermutationTest(y=lot05$junior,
treat=resp.dat$treat,
w=resp.dat$weight,
p.score=resp.dat$p.score)
lot05$military
lot05$military <- ifelse(lot05$captain==1 | lot05$colonel==1 | lot05$general==1 | lot05$major==1,1,0)
lot05 <- cbind(lot05,dummify(as.factor(lot05$county))) # create county of registration dummies
library(weights)
library(gdata)
library(ggplot2)
library(plyr)
library(dplyr)
library(weights)
library(scales)
library(ifultools)
library(RecordLinkage)
library(splines)
library(MASS)
library(boot)
library(reporttools)
library(xtable)
library(reshape2)
library(RecordLinkage)
library(AER)
library(memisc)
library(grid)
library(gridExtra)
library(gtools)
library(Hmisc)
library(scales)
library(stringr)
lot05 <- cbind(lot05,dummify(as.factor(lot05$county))) # create county of registration dummies
colnames(lot05)
covars.balance <- c("junior","senior","surname.freq","surname.length","blacksmith","bricklayer","hatter","esquire","merchant","military","doctor","reverend","schoolmaster","Bryan","Bulloch","Burke","Camden","Chatham","Clarke","Columbia","Effingham","Elbert","Franklin","Glynn","Greene","Hancock","Jackson","Jefferson","Liberty","Lincoln","McIntosh","Montgomery","Oglethorpe","Richmond","Screven","Tattnall","Warren","Washington","Wilkes")
lot05[covars.balance]
head(lot05[covars.balance])
lot05$military <- ifelse(lot05$captain==1 | lot05$colonel==1 | lot05$general==1 | lot05$major==1,1,0) # create military variable
lot05 <- cbind(lot05,dummify(as.factor(lot05$county))) # create county of registration dummies
covars.balance <- c("junior","senior","surname.freq","surname.length","blacksmith","bricklayer","hatter","esquire","merchant","military","doctor","reverend","schoolmaster","Bryan","Bulloch","Burke","Camden","Chatham","Clarke","Columbia","Effingham","Elbert","Franklin","Glynn","Greene","Hancock","Jackson","Jefferson","Liberty","Lincoln","McIntosh","Montgomery","Oglethorpe","Richmond","Screven","Tattnall","Warren","Washington","Wilkes")
balance.p <- lapply(covars.balance, function(x) PermutationTest(y=lot05[x],
treat=resp.dat$treat,
w=resp.dat$weight,
p.score=resp.dat$p.score)
balance.p <- lapply(covars.balance, function(x) PermutationTest(y=lot05[x],
treat=resp.dat$treat,
w=resp.dat$weight,
p.score=resp.dat$p.score))
balance.p <- lapply(covars.balance, function(x) PermutationTest(y=lot05[x],
treat=resp.dat$treat,
w=resp.dat$weight,
p.score=resp.dat$p.score))
summary(Treat)
summary(treat)
summary(y)
length(treat)
length(y)
nrow(y)
balance.p <- lapply(covars.balance, function(x) PermutationTest(y=lot05[,x],
treat=resp.dat$treat,
w=resp.dat$weight,
p.score=resp.dat$p.score))
balance.p
warnings()
#1807 boundary files: http://publications.newberry.org/ahcbp/downloads/states.html
#tutorial: http://spatial.ly/2013/12/introduction-spatial-data-ggplot2/
setwd("~/Dropbox/ga-lottery/data/GA_AtlasHCB/GA_Historical_Counties")
library(ggplot2)
library(rgdal)
library(rgeos)
library(maptools)
library(ggmap)
library(grid)
library(ifultools)
library(sp)
library(spdep)
library(ifultools)
#load map data
county.map <- readOGR(dsn = ".", "GA_Historical_Counties")
#subset to counties as of 12/31/1807
county.map <- county.map[(county.map$START_N<=18071231 & county.map$END_N >= 18071231),]
#convert to df
county.f <- fortify(county.map,region="NAME")
#merge back info
county.f <- merge(county.f,county.map@data, by.x = "id", by.y = "NAME")
#make county names proper
county.f$id <- properCase(as.character(county.f$id))
#create dummy for new counties
county.f$newcounty <- ifelse((county.f$id=="Wilkinson" | county.f$id=="Wayne" | county.f$id=="Baldwin"),1,0)
#subset 1807 counties + 3 new counties
counties1807 <- county.f[county.f$id=="Baldwin" | county.f$id== "Bryan"| county.f$id=="Bulloch"| county.f$id=="Burke"| county.f$id=="Camden"| county.f$id=="Chatham"| county.f$id=="Clarke"| county.f$id=="Columbia"| county.f$id=="Effingham"| county.f$id=="Elbert"| county.f$id=="Franklin"| county.f$id=="Glynn"| county.f$id=="Greene"| county.f$id=="Hancock"| county.f$id=="Jackson"| county.f$id=="Jefferson"| county.f$id=="Liberty"| county.f$id=="Lincoln"| county.f$id=="Mcintosh"| county.f$id=="Montgomery"| county.f$id=="Oglethorpe"| county.f$id=="Richmond"| county.f$id=="Screven"| county.f$id=="Tattnall"| county.f$id=="Warren"| county.f$id=="Washington"| county.f$id=="Wayne" | county.f$id=="Wilkes" | county.f$id=="Wilkinson",]
# Make labels
cnames <- aggregate(cbind(counties1807$long, counties1807$lat),list(counties1807$id),
FUN=function(x)mean(range(x)))
colnames(cnames) <- c("group","long","lat")
cnames$lat[cnames$group=="Camden"] <- 31 # move up Camden
cnames$lat[cnames$group=="Bryan"] <- 32.01 # move up Bryan
cnames$long[cnames$group=="Chatham"] <- -81.2 # move left Chatham
#produce counties map
Map <- ggplot(counties1807, aes(long, lat, group = group, fill = newcounty)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) +
scale_colour_manual(values=c('black')) + theme(legend.position="none")
Map + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
#merge 1800 census data
county.00 <- merge(counties1807,counties.00, by.x = "id", by.y = "name") # only counties in 1800
# Slave pop. map
Map.slave.pop <- ggplot(county.00, aes(long, lat, group = group, fill = slave.poppc)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Slave pop. (%)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) + scale_colour_manual(values=c('black'),guide=FALSE)
Map.slave.pop
counties
county.50 <- merge(counties1807,counties, by="id", by.y = "county",all.x=TRUE) # only counties in 1807
head(county.50)
head(counties)
county.50 <- merge(counties1807,counties, by.x="id", by.y = "name",all.x=TRUE) # only counties in 1807
head(county.50)
Map.avgacre <- ggplot(counties1807, aes(long, lat, group = group, fill = avgacre)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) +
scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)")
Map.avgacre + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
Map.avgacre <- ggplot(counties1807, aes(long, lat, group = group, fill = avgacre)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) +
scale_colour_manual(values=c('black')) + theme(legend.position="none")
Map.avgacre + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = avgacre)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) +
scale_colour_manual(values=c('black')) + theme(legend.position="none")
Map.avgacre + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
View(county.50)
View(counties)
colnames(counties)
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = farmval)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) +
scale_colour_manual(values=c('black')) + theme(legend.position="none")
Map.avgacre + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
summary(county.50)
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = slave.poppc)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) +
scale_colour_manual(values=c('black')) + theme(legend.position="none")
Map.avgacre + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
counties$logfarmval <- log(counties$farmval) # log farm value
counties$logequipval <- log(counties$equipval) # log equipment value
counties$logfarms <- log(counties$farms)   # log farms
counties$logavgfarm <- log(counties$avgfarm) # log avg farm value
counties$logtotalfarmacres <- log(counties$acunimp+counties$acimp) # log total farm acres
counties$logstot <- log(counties$stot) # log slave pop
counties$slave.poppc <- counties$stot/counties$totpop # slave population / total population
counties$slave.birthpc <- counties$sbirth/counties$births # slave births / total births
counties$slave.deathpc <- counties$sdeath/counties$deaths # slave deaths / total deaths
#merge 1850 census data
county.50 <- merge(counties1807,counties, by.x="id", by.y = "name",all.x=TRUE) # only counties in 1807
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = slave.poppc)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) +
scale_colour_manual(values=c('black')) + theme(legend.position="none")
Map.avgacre + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
#Avg. Acre value map
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = avgacre)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) +
Map.avgacre + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
#Avg. Acre value map
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = avgacre)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807)
Map.avgacre + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
#Avg. Acre value map
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = avgacre)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id), map = counties1807)
Map.avgacre + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
#Avg. Acre value map
Map.avgacre <- ggplot(county.50, aes(long, lat, group = group, fill = avgacre)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Per acre farm value (1850$)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) + scale_colour_manual(values=c('black'),guide=FALSE)
Map.avgacre + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
#Avg. Acre value map
Map.slave.pop.50 <- ggplot(county.50, aes(long, lat, group = group, fill = slavepoppc)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Slave pop.(% 1850)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) + scale_colour_manual(values=c('black'),guide=FALSE)
Map.slave.pop.50 + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
colnames(counties.50)
colnames(counties)
#Avg. Acre value map
Map.slave.pop.50 <- ggplot(county.50, aes(long, lat, group = group, fill = slave.poppc)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Slave pop.(% 1850)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) + scale_colour_manual(values=c('black'),guide=FALSE)
Map.slave.pop.50 + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
#Avg. Acre value map
Map.slave.pop.50 <- ggplot(county.50, aes(long, lat, group = group, fill = slave.poppc)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Slave pop. (% in 1850)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) + scale_colour_manual(values=c('black'),guide=FALSE)
Map.slave.pop.50 + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
#Avg. Acre value map
Map.slave.pop.50 <- ggplot(county.50, aes(long, lat, group = group, fill = slave.poppc)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Slave pop. (% in 1850)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) + scale_colour_manual(values=c('black'),guide=FALSE) + theme(legend.position="top")
Map.slave.pop.50 + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
# Slave pop. map
Map.slave.pop.00 <- ggplot(county.00, aes(long, lat, group = group, fill = slave.poppc)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Slave pop. (% in 1800)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) + scale_colour_manual(values=c('black'),guide=FALSE) + theme(legend.position="top")
Map.slave.pop.00 + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
Map.slave.pop.00
Map.slave.pop.00 + with(cnames[group!="Clarke"], annotate(geom="text", x = long, y=lat, label = group, size = 3))
Map.slave.pop.00 + with(cnames[cnames$group!="Clarke"], annotate(geom="text", x = long, y=lat, label = group, size = 3))
Map.slave.pop.00 + with(cnames[cnames$group!="Clarke",], annotate(geom="text", x = long, y=lat, label = group, size = 3))
Map.slave.pop.00 + with(cnames[cnames$group!="Clarke" & cnames$group!="Baldwin" cnames$group!="Tattnall" & cnames$group!="Wayne",], annotate(geom="text", x = long, y=lat, label = group, size = 3))
#1807 boundary files: http://publications.newberry.org/ahcbp/downloads/states.html
#tutorial: http://spatial.ly/2013/12/introduction-spatial-data-ggplot2/
setwd("~/Dropbox/ga-lottery/data/GA_AtlasHCB/GA_Historical_Counties")
library(ggplot2)
library(rgdal)
library(rgeos)
library(maptools)
library(ggmap)
library(grid)
library(ifultools)
library(sp)
library(spdep)
library(ifultools)
#load map data
county.map <- readOGR(dsn = ".", "GA_Historical_Counties")
#subset to counties as of 12/31/1807
county.map <- county.map[(county.map$START_N<=18071231 & county.map$END_N >= 18071231),]
#convert to df
county.f <- fortify(county.map,region="NAME")
#merge back info
county.f <- merge(county.f,county.map@data, by.x = "id", by.y = "NAME")
#make county names proper
county.f$id <- properCase(as.character(county.f$id))
#create dummy for new counties
county.f$newcounty <- ifelse((county.f$id=="Wilkinson" | county.f$id=="Wayne" | county.f$id=="Baldwin"),1,0)
#subset 1807 counties + 3 new counties
counties1807 <- county.f[county.f$id=="Baldwin" | county.f$id== "Bryan"| county.f$id=="Bulloch"| county.f$id=="Burke"| county.f$id=="Camden"| county.f$id=="Chatham"| county.f$id=="Clarke"| county.f$id=="Columbia"| county.f$id=="Effingham"| county.f$id=="Elbert"| county.f$id=="Franklin"| county.f$id=="Glynn"| county.f$id=="Greene"| county.f$id=="Hancock"| county.f$id=="Jackson"| county.f$id=="Jefferson"| county.f$id=="Liberty"| county.f$id=="Lincoln"| county.f$id=="Mcintosh"| county.f$id=="Montgomery"| county.f$id=="Oglethorpe"| county.f$id=="Richmond"| county.f$id=="Screven"| county.f$id=="Tattnall"| county.f$id=="Warren"| county.f$id=="Washington"| county.f$id=="Wayne" | county.f$id=="Wilkes" | county.f$id=="Wilkinson",]
# Make labels
cnames <- aggregate(cbind(counties1807$long, counties1807$lat),list(counties1807$id),
FUN=function(x)mean(range(x)))
colnames(cnames) <- c("group","long","lat")
cnames$lat[cnames$group=="Camden"] <- 31 # move up Camden
cnames$lat[cnames$group=="Bryan"] <- 32.01 # move up Bryan
cnames$long[cnames$group=="Chatham"] <- -81.2 # move left Chatham
#produce counties map
Map <- ggplot(counties1807, aes(long, lat, group = group, fill = newcounty)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) +
scale_colour_manual(values=c('black')) + theme(legend.position="none")
Map + with(cnames, annotate(geom="text", x = long, y=lat, label = group, size = 3))
#merge 1800 census data
county.00 <- merge(counties1807,counties.00, by.x = "id", by.y = "name") # only counties in 1800
# Slave pop. map
Map.slave.pop.00 <- ggplot(county.00, aes(long, lat, group = group, fill = slave.poppc)) + geom_polygon() +
coord_equal()  + scale_fill_gradient(low = "white", high = "gray") + labs(fill="Slave pop. (% in 1800)") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(),axis.title.x = element_blank(),axis.title.y = element_blank()) + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
geom_map(aes(map_id = id, colour = 'black'), map = counties1807) + scale_colour_manual(values=c('black'),guide=FALSE) + theme(legend.position="top")
Map.slave.pop.00 + with(cnames[cnames$group!="Clarke" & cnames$group!="Baldwin" % cnames$group!="Tattnall" & cnames$group!="Wayne",], annotate(geom="text", x = long, y=lat, label = group, size = 3))
cnames[cnames$group!="Clarke" & cnames$group!="Baldwin" % cnames$group!="Tattnall" & cnames$group!="Wayne",]
cnames[cnames$group!="Clarke" & cnames$group!="Baldwin" & cnames$group!="Tattnall" & cnames$group!="Wayne",]
Map.slave.pop.00 + with(cnames[cnames$group!="Clarke" & cnames$group!="Baldwin" & cnames$group!="Tattnall" & cnames$group!="Wayne",], annotate(geom="text", x = long, y=lat, label = group, size = 3))
summary(lot05$term1)
summary(lot05)
summary(resp.dat$term1)
summary(resp.dat$term)
summary(resp.dat)
